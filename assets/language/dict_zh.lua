--[[
格式说明：
# 内部词条id，不可修改
@ title 词条标题，必填，如果有多个会视为多行标题（目录页只显示一行）
@ titleFull 可选，显示在正文页面的完整词条标题，不写就同title，有多个也视为多行标题
@ titleSize 可选，标题字号，默认50，会自动取整到最近的5的整倍数
@ contentSize 可选，正文字号，默认30，也会自动取整
@ link 可选，让词条附带网址链接
正文
正文
……（行数任意）

任何一行的行末可以添加“--注释文本”，如果整行都是注释，该行将不会被显示
如果开头是~~，那么这行是分割线，至少两个~都可以，后面可以带一个数字代表分割线的粗细，不写默认1
有格式错误时启动游戏打开词典会在左上角弹出错误信息，注意显示的行数不包括这段说明的行数

翻译说明：
    1. 本文件仅能影响词条对应的文本内容，修改词条顺序并不会影响其最终在词典中的顺序，所以不推荐调整顺序
    2. 在菜单介绍/教程类型的词条中，尽可能保留“你”（玩家）这个称呼，营造一些对话感
    3. 在术语/技巧词条中，尽可能使描述严肃，不要出现“游戏”等在本语言环境下“明显带有娱乐意味”的、或者“玩家”等“直接指向玩家的”代词（可以通过省略和变换句式避开，不影响意思即可）
    4. 请将以上所有说明也翻译并放在相同位置，方便其他译者再转译到其他语言
]]

return [[
# aboutDict
@ title 关于本词典
帮助你了解这里的一切。

# aboutDict_hidden
@ title 关于本词典?
帮助你了解这里的一切。
哇，你用快捷键打开了词典！

# setting_out
@ title 设置
设置菜单
你可以在这里修改各种选项。

# noobGuide
@ title 欢迎新人
@ contentSize 25
以下给出几个新手时期的主要学习路线，前期主要就应练习以下内容，学定式和T-Spin什么的对实力帮助很小（此处不认为靠定式对战秒其他对手是有效的通用实力）：（注意，三段应当同时进行，不是A→B→C）
~~11
A.堆叠能力练习方法

A1.手上的块可以放的时候先别急着放，看看下一块有没有地方，如果放不下去就看看手上的能不能换个地方
A2.尝试把地形尽量控制得平整，因为大多数情况比较平的地形来啥块都比较容易放得下去
A3.允许暂存的时候可以多想想手里和暂存的块和后续几块应该怎么安排顺序，使地形能持续平整
~~
B.操作效率与速度练习方法

B1.不要每一块都拿影子去对形状对位置，尽量自己脑中想象方块旋转后是什么方向，想好了再开始动手
B2.学习双旋，能逆时针转一次就不要顺时针转三次
B3.学习极简，刚开始先不管速度，保证正确率几乎100%，熟悉后再去提速
~~
C.堆叠能力考核

C1.允许暂存，稳定完成40行不死
C2.禁用暂存，稳定完成40行不死
C3.允许暂存，稳定全部消四完成40行
C4.禁用暂存，稳定全部消四完成40行
~~
以上都是根据社区和个人经验总结的模糊方法与目标，故C的考核可以根据自身情况调整严格程度（例如“稳定”的具体成功率）。
注：完成C部分的考核后，需要在未来一直注意没有上限的A1，这是方块的根本元素之一，有了强大的读next能力可以快速上手任何变种规则。

# keybinding
@ title 键位设置向导
键位设置原则参考：
1.不要让一个手指管两个可能同时按的键，通常只有几个旋转键不需要同时按，其他功能推荐都单独给一个手指；
2.除非已经锻炼过小拇指，最好不要用，一般食指和中指最灵活，自己觉得舒服为准；
3.没必要参考别人的键位设置，每个人都不一样，只要不违反前几条规则，就几乎不会对成绩产生影响。

# handling
@ title 手感相关向导
决定手感的几个主要因素：
1.输入延迟受设备配置或者设备状况影响。可以重启或换设备解决；
2.程序运行稳定性程序设计或.实现）得不好，时不时会卡一下。把设置画面效果拉低可能可以缓解；
3.规则设计故意的。自己适应；
4.参数设置设置不当。去改设置；
5.姿势不当。不便用力，换个姿势；
6.换键位或者换设备后不适应，操作不习惯。多习惯习惯，改改设置；
7.肌肉疲劳反应和协调能力下降。睡一觉或者做点体育运动，过段时间（也可能要几天）再回来。

# piece_shape
@ title 方块形状
在通常规则下，所有的方块都是“四连块”，即四个正方形共用边连接成的形状。
在不允许翻转，只允许平移和旋转90°的全等判定下，四连块一共有七种，根据它们的形状一般分别叫做Z、S、J、L、T、O、I。

# piece_color
@ title 方块颜色
在通常规则下，相同形状的方块颜色也都相同，方便对形状进行更直观的记忆。

# piece_direction
@ title 方块朝向
在通常规则下，相同形状的方块会以同一个朝向生成，不会一会横一会竖，同时部分旋转系统中踢墙表的选择也由方块从哪个朝向转到哪个朝向决定。
当我们需要描述方块的状态时，使用 0 R 2 L 四个字符来描述方块的朝向，其中0为生成时的朝向，R（Right）是从0朝向开始顺时针旋转90°后的，L（Left）是逆时针90°后的，2（任意方向旋转两次）是旋转180°后的。

# next
@ title 预览队列（Next）
即将生成的方块队列。提前思考未来的块可以怎么摆有助于优化当前控制块的选择。

# hold
@ title 暂存（Hold）
将当前控制块放入暂存槽位，把暂存槽位中的方块取出来作为控制块。用于调整块序，优化摆放策略。

# clear
@ title 消1/2/3/4
落下一块后消除的行数。
1行: Single
2行: Double
3行: Triple
4行: Techrash

# clear_big
@ title 消5/6/7
单次消除四行以上的大型消除，仅在特殊规则下可行。
5行: Pentacrash
6行: Hexacrash
7行: Heptacrash

# clear_huge
@ title 消8+
单次消除至少八行的巨型消除。
8行: Octacrash
9行: Nonacrash
10行: Decacrash
11行: Undecacrash
12行: Dodecacrash
13行: Tridecacrash
14行: Tetradecacrash
15行: Pentadecacrash
16行: Hexadecacrash
17行: Heptadecacrash
18行: Octadecacrash
19行: Nonadecacrash
20行: Ultracrash
21行: Impossicrash

# b2b
@ title 满贯（B2B）
Back to Back，指连着两次消除都是特殊消行（通常包括消四和回旋消除），中间没有间隔普通消行。

# all_clear
@ title 全消（AC）
All Clear，消除场地内所有方块。

# half_clear
@ title 半全消（HC）
Half Clear，AC（全消）的外延，指“下方有剩余方块”的全消。
特别地，如果只消1行则必须不剩余主动放置的方块。

# rotation_system
@ title 旋转系统
方块进行“旋转”操作的时候，如果旋转后的原定目标位置和场地或墙壁有重合，会进行一些偏移测试，把方块平移到附近的空位来使旋转操作能顺利完成，而不容易卡住转不动。旋转操作具体使方块如何运动的规则就是旋转系统。
上文中的偏移过程称为“踢墙”。通常偏移坐标会被用表格的方式存储，根据方块的种类和旋转的方向来选择，该表被称为“踢墙表”。

# spin
@ title 回旋消除（Spin）
在规则允许的情况下，使用旋转操作将方块卡进不能直接移到的位置称为Spin，根据使用的具体方块，操作会被称为例如Z-Spin、J-Spin等。
如果Spin的同时产生了消除，则该消除为Spin消除。
Mini-Spin:不满足一些条件的回旋消除可能会被附加Mini的前缀，获得的奖励会减少。

# all_spin
@ title 所有块可旋（All-Spin）
一种规则，指使用所有方块进行回旋消除都会得到奖励，作用为强调规则不是另一个常见规则T-Only，该规则只有T方块的回旋操作能获得奖励。

# combo
@ title 连击（Combo）
指连续落下几块后都产生了消除。

# combo_setup
@ title 连击楼
为了打出连击，通常使用的办法是堆一个连击楼，也就是在一侧空出1~4列，填满其他的几列，然后将方块连续丢入空列进行消除。

# spike
@ title 爆发（Spike）
指短时间内打出大量的攻击。

# drop_speed
@ title 落块速度（LPM / BPM / PPS）
表示落块速度的常用标准有PPS和BPM和LPM。
PPS: Piece per Second，块每秒
BPM: Block per Minute，块每分，也有写作PPM的，第一个P同PPS，意思相同
LPM: Line per Minute，行每分，其中行的计算方式有两种，一是字面意义上的消了几行，二是只用落下的方块数来换算，去掉垃圾行等外部因素的影响

# key_speed
@ title 按键速度（KPS / KPM）
表示按键速度的常用标准有KPS和KPM。
KPS: Key per Second，按键每秒
KPM: Key per Minute，按键每分

# attack_power
@ title 攻击强度（APM / APL）
表示攻击强度的常用标准有APM和APL。
APM: Attack per Minute，攻击每分
APL: Attack per Line，攻击每行（行的计算方式也可以分两种，详见LPM词条），也叫效率

# asd_asp
@ title 移动延迟（ASD&ASP）
@ contentSize 25
ASD: Auto Shift Delay，自动移动延迟，旧称DAS（Delayed Auto Shift）
ASP: Auto Shift Period，自动重复周期，旧称ARR（Auto Repeat Rate)
~~
在使用键盘输入文本时按住一个键，会连续输入了一大串字符。注意字符出现的时机：第一个字按下后立刻出现，停了一小会后开始快速连续自动输入，其中“停了一小会”就是ASD长度，“连续自动输入”的间隔就是ASP长度。
~~
最佳调节方法：ASD越小越好，但小到依然能准确区分单点和长按两种动作为止；ASP能多小就多小，尽可能接近0。

# init_control
@ title 预输入
在规则允许的情况下，在新的方块出现之前就可以提前进行输入移动、旋转、暂存指令的输入，从而使方块以不同的姿态出现在不同的位置。该机制能防止吃键，优化方块控制手感，甚至能够避开死亡判定。

# misaction
@ title 误操作（mis-action）
误操作通常有误放（mis-drop）和误暂存（mis-hold）。误放指因为操作问题无意中将方块锁定在了错误的地方，误暂存指本来不用暂存的时候按了暂存，导致需要的块进暂存拿不出来了（通常不允许连续暂存）。

# gravity
@ title 下落速度
指在不操作的情况下，方块自然下落的速度。
下落比较慢的时候一般用“x秒一格”和“一秒x格”，很快的时候一般以G为单位表示方块的下落速度，意思是每一帧方块往下移动多少格，默认60FPS的情况下1G就是每秒下落60格，半秒之内就能触底。另见“无限重力（20G）”词条。

# 20g
@ title 无限重力（20G）
通常的场地为20格高，故有意义的最大值就是20G，继续增大数字并没有区别，故20G的含义演变为了无限重力，不再是字面上的一帧下落20格了。
20G下方块永远瞬间到底，看不到中间的下落过程，落入深坑的方块无法再移出。

# lock_delay
@ title 锁定延迟
指在不操作的情况下，“方块自然下落至触地”到“方块锁定不能再移动”之间的时间。
一般规则下该延迟可以被操作刷新，故在高重力规则下即使方块瞬间落地，依然有很多操作的机会。

# spwan_delay
@ title 出块延迟（ED）
Entry Delay，进场延迟，指“当前方块锁定”到“下一个方块出现”之间的时间。
有时也被称为ARE

# clear_delay
@ title 消行延迟（LCD）
Line Clear Delay，指消行动画持续的时间。

# death_delay
@ title 窒息死亡延迟（SDD）
Suffocating Death Delay，如果方块出生后和场地有重叠，将进入窒息状态，倒计时结束后方块强制锁定，本局结束。

# death_condition
@ title 死亡判定
不同规则的死亡判定不同，通常包含其中的一条或若干条：
1. 窒息（Block Out），生成位置被阻挡
2. 场外锁定（Lock Out），方块锁定时完全在场地之外
3. 超高（Top Out），场地总高度大于一定值

# bag7_sequence
@ title Bag7出块
包-7，一种常见的序列生成方式。从开局起，每七个块包含七种形状各一个，只随机打乱顺序。这种序列生成方式彻底避免了很久不出某个块和某个块来得特别多的情况。

# his_sequence
@ title His出块
History（历史记录），一类序列生成方式，具体的类型例如His4 Roll6（h4r6），效果是在随机生成新的方块时，在七个块中直接随机一个，但会查看最近4个生成的方块，如果有一样的就重新随机，直到和最近四个都不一样，或者尝试了6次。
His出块是相比纯随机出块的一大改进，大大减小了连续出太多SZ（洪水）和很久没有I（干旱）的概率。

# half_invis
@ title 半隐
指方块在锁定一段时间后（几秒钟左右）会变为隐形状态的规则。

# full_invis
@ title 全隐
指方块在锁定后立刻开始进入隐形状态的规则。

# deepdrop
@ title 深降（Deepdrop）
允许方块向下穿墙瞬移到正下方的空位里。
该功能通常用于技术研究，开启后可以完全不用再考虑旋转系统，只要形状能容得下的地方就一定能到达。

# cascade
@ title 场地重力
（由于“重力”有歧义所以此处称为场地重力，也有重力连锁等叫法。）
此规则下方块的每个小格之间会有连接关系，消除后导致部分悬空时悬空的部分会往下落。在这个规则下可以构造非常复杂的连锁消除。

# mph
@ title MPH
Memoryless，Previewless，Holdless
一个规则组合：纯随机块序+无预览+无暂存。

# multi_rotaion
@ title 双旋 / 三旋
双旋指能够使用顺时针+逆时针两个旋转键的技术，原来要单方向转三下的情况可以改成只反着转一下，减少烦琐操作。
双旋也是学习Finesse的必要前提。
三旋则是基于双旋再加上180°旋转，让转两下的情况也可以一键完成，但对效率提升效果不大，一些规则下也不允许该操作。

# finesse
@ title 极简（Finesse）
用最少的按键数将方块移到想去的位置的技术，节约时间和减少误操作。
通常说的极简只考虑从空中直接落下的位置，不包括要软降再移动或者回旋消除。

# hypertap
@ title 超连点（Hypertap）
在ASD很慢或者其他不适合长按自动移动的情况下，快速震动手指以实现比长按更快速+灵活的高速单点移动。

# 26f_studio
@ title 26F Studio
@ contentSize 26
一个组织
]]
