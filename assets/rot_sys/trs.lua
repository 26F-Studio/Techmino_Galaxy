local OspinList={
    {111,5,2, 0,-1,0},{111,5,2,-1,-1,0},{111,5,0,-1, 0,0},--T
    {333,5,2,-1,-1,0},{333,5,2, 0,-1,0},{333,5,0, 0, 0,0},--T
    {313,1,2,-1, 0,0},{313,1,2, 0,-1,0},{313,1,2, 0, 0,0},--Z
    {131,2,2, 0, 0,0},{131,2,2,-1,-1,0},{131,2,2,-1, 0,0},--S
    {131,1,2,-1, 0,0},{131,1,2, 0,-1,0},{131,1,2, 0, 0,0},--Z(misOrder)
    {313,2,2, 0, 0,0},{313,2,2,-1,-1,0},{313,2,2,-1, 0,0},--S(misOrder)
    {331,3,2, 0,-1,1},--J(farDown)
    {113,4,2,-1,-1,1},--L(farDown)
    {113,3,2,-1,-1,0},{113,3,0, 0, 0,0},--J
    {331,4,2, 0,-1,0},{331,4,0,-1, 0,0},--L
    {222,7,0,-1, 1,1},{222,7,0,-2, 1,1},{222,7,0, 0, 1,1},--I(high)
    {222,7,2,-1, 0,2},{222,7,2,-2, 0,2},{222,7,2, 0, 0,2},--I(low)
    {121,6,0, 1,-1,2},{112,6,0, 2,-1,2},{122,6,0, 1,-2,2},--O
    {323,6,0,-1,-1,2},{332,6,0,-2,-1,2},{322,6,0,-1,-2,2},--O
}--{keys, ID, dir, dx, dy, freeLevel (0=immovable, 1=U/D-immovable, 2=free)}
local XspinList={
    {{ 1,-1},{ 1, 0},{ 1, 1},{ 1,-2},{ 1, 2}},
    {{ 0,-1},{ 0,-2},{ 0, 1},{ 0,-2},{ 0, 2}},
    {{-1,-1},{-1, 0},{-1, 1},{-1,-2},{-1, 2}},
}
local TRS={
    centerTex=GC.load{10,10,
        {'setCL',1,1,1,.4},
        {'fRect',1,1,8,8},
        {'setCL',1,1,1,.6},
        {'fRect',2,2,6,6},
        {'setCL',1,1,1,.8},
        {'fRect',3,3,4,4},
        {'setCL',1,1,1},
        {'fRect',4,4,2,2},
    },
    centerDisp=TABLE.new(true,29),
    kickTable={
        {
            [01]={'+0+0','-1+0','-1+1','+0-2','-1+2','+0+1'},
            [10]={'+0+0','+1+0','+1-1','+0+2','+1-2','+1-2'},
            [03]={'+0+0','+1+0','+1+1','+0-2','+1-1','+1-2'},
            [30]={'+0+0','-1+0','-1-1','+0+2','-1+2','+0-1'},
            [12]={'+0+0','+1+0','+1-1','+0+2','+1+2','+1+1'},
            [21]={'+0+0','-1+0','-1+1','+0-2','-1-2','-1-1'},
            [32]={'+0+0','-1+0','-1-1','+0+2','-1+2','+0-1'},
            [23]={'+0+0','+1+0','+1+1','+0-2','+1-2','+0+1'},
            [02]={'+0+0','+1+0','-1+0','+0-1','+0+1'},
            [20]={'+0+0','-1+0','+1+0','+0+1','+0-1'},
            [13]={'+0+0','+0-1','+0+1','+0-2'},
            [31]={'+0+0','+0+1','+0-1','+0+2'},
        },--Z
        false,--S
        {
            [01]={'+0+0','-1+0','-1+1','+0-2','+1+1','+0+1','+0-1'},
            [10]={'+0+0','+1+0','+1-1','+0+2','-1-1','+0-1','+0+1'},
            [03]={'+0+0','+1+0','+1+1','+0-2','+1-2','+1-1','+0+1'},
            [30]={'+0+0','-1+0','-1-1','+0+2','-1+2','+0-1','-1+1'},
            [12]={'+0+0','+1+0','+1-1','+1+1','-1+0','+0-1','+0+2','+1+2'},
            [21]={'+0+0','-1+0','-1+1','-1-1','+1+0','+0+1','+0-2','-1-2'},
            [32]={'+0+0','-1+0','-1-1','+1+0','+0+2','-1+2','-1+1'},
            [23]={'+0+0','+1+0','+1-1','-1+0','+1+1','+0-2','+1-2'},
            [02]={'+0+0','-1+0','+1+0','+0-1','+0+1'},
            [20]={'+0+0','+1+0','-1+0','+0+1','+0-1'},
            [13]={'+0+0','+0-1','+0+1','+1+0'},
            [31]={'+0+0','+0+1','+0-1','-1+0'},
        },--J
        false,--L
        {
            [01]={'+0+0','-1+0','-1+1','+0-2','-1-2','+0+1'},
            [10]={'+0+0','+1+0','+1-1','+0+2','+1+2','+0-1'},
            [03]={'+0+0','+1+0','+1+1','+0-2','+1-2','+0+1'},
            [30]={'+0+0','-1+0','-1-1','+0+2','-1+2','+0-1'},
            [12]={'+0+0','+1+0','+1-1','+0-1','-1-1','+0+2','+1+2','+1+1'},
            [21]={'+0+0','-1+0','+0-2','-1-2','-1-1','+1+1'},
            [32]={'+0+0','-1+0','-1-1','+0-1','+1-1','+0+2','-1+2','-1+1'},
            [23]={'+0+0','+1+0','+0-2','+1-2','+1-1','-1+1'},
            [02]={'+0+0','-1+0','+1+0','+0+1'},
            [20]={'+0+0','+1+0','-1+0','+0-1'},
            [13]={'+0+0','+0-1','+0+1','+1+0','+0-2','+0+2'},
            [31]={'+0+0','+0-1','+0+1','-1+0','+0-2','+0+2'},
        },--T
        function(P,d)
            if P.gameEnv.easyFresh then
                P:freshBlock('fresh')
            end
            if P.gameEnv.ospin then
                local x,y=P.curX,P.curY
                local C=P.cur
                if y==P.ghoY and((P:solid(x-1,y)or P:solid(x-1,y+1)))and(P:solid(x+2,y)or P:solid(x+2,y+1))then
                    if P.sound then
                        SFX.play('rotatekick',nil,P:getCenterX()*.15)
                    end

                    --[Warning] Field spinSeq is a dirty data, TRS put this var into the block.
                    C.spinSeq=(C.spinSeq or 0)%100*10+d
                    if C.spinSeq<100 then
                        return end
                    for i=1,#OspinList do
                        local L=OspinList[i]
                        if C.spinSeq==L[1]then
                            local id,dir=L[2],L[3]
                            local bk=Blocks[id][dir]
                            x,y=P.curX+L[4],P.curY+L[5]
                            if
                                not P:ifoverlap(bk,x,y)and(
                                    L[6]>0 or(P:ifoverlap(bk,x-1,y)and P:ifoverlap(bk,x+1,y))
                                )and(
                                    L[6]==2 or(P:ifoverlap(bk,x,y-1)and P:ifoverlap(bk,x,y+1))
                                )
                            then
                                C.id=id
                                C.bk=bk
                                P.curX,P.curY=x,y
                                C.dir=dir
                                P.spinLast=2
                                P.stat.rotate=P.stat.rotate+1
                                P:freshBlock('move')
                                C.spinSeq=nil
                                return
                            end
                        end
                    end
                else
                    if P.sound then
                        SFX.play('rotate',nil,P:getCenterX()*.15)
                    end
                    C.spinSeq=nil
                end
            else
                if P.sound then
                    SFX.play('rotate',nil,P:getCenterX()*.15)
                end
            end
        end,--O
        {
            [01]={'+0+0','+0+1','+1+0','-2+0','-2-1','+1+2'},
            [10]={'+0+0','+2+0','-1+0','-1-2','+2+1','+0+1'},
            [03]={'+0+0','+0+1','-1+0','+2+0','+2-1','-1+2'},
            [30]={'+0+0','-2+0','+1+0','+1-2','-2+1','+0+1'},
            [12]={'+0+0','-1+0','+2+0','+2-1','+0-1','-1+2'},
            [21]={'+0+0','-2+0','+1+0','+1-2','-2+1','+0+1'},
            [32]={'+0+0','+1+0','-2+0','-2-1','+0-1','+1+2'},
            [23]={'+0+0','+2+0','-1+0','-1-2','+2+1','+0+1'},
            [02]={'+0+0','-1+0','+1+0','+0-1','+0+1'},
            [20]={'+0+0','+1+0','-1+0','+0+1','+0-1'},
            [13]={'+0+0','+0-1','-1+0','+1+0','+0+1'},
            [31]={'+0+0','+0-1','+1+0','-1+0','+0+1'},
        },--I
        {
            [01]={'+0+0','+0+1','+1+1','-1+0','+0-3','+0+2','+0-2','+0+3','-1+2'},
            [10]={'+0+0','+0-1','-1-1','+1+0','+0-3','+0+2','+0-2','+0+3','+1-2'},
            [03]={'+0+0','+1+0','+0-3','+0-1','+0+1','+0-2','+0+2','+0+3','+1+2'},
            [30]={'+0+0','-1+0','+0-1','+0+1','+0-2','+0-3','+0+2','+0+3','-1-2'},
        },--Z5
        false,--S5
        {
            [01]={'+0+0','-1+0','-1+1','+0-2','-1-2','-1-1','+0+1'},
            [10]={'+0+0','+1+0','+1-1','+0+2','+1+2','+0-1','+1+1'},
            [03]={'+0+0','+1+0','+1+1','+0-2','+1-2'},
            [30]={'+0+0','-1+0','-1-1','+0+2','-1+2'},
            [12]={'+0+0','+1+0','+1-1','+0+2','+1+2','+1+1'},
            [21]={'+0+0','-1+0','-1-1','-1+1','+0-2','-1-2','-1-1'},
            [32]={'+0+0','-1+0','-1-1','-1+1','+0-1','+0+2','-1+2'},
            [23]={'+0+0','+1+0','+1+1','-1+0','+0-2','+1-2'},
            [02]={'+0+0','-1+0','+0-1','+0+1'},
            [20]={'+0+0','+1+0','+0+1','+0-1'},
            [13]={'+0+0','+1+0','+0+1','-1+0'},
            [31]={'+0+0','-1+0','+0-1','+1+0'},
        },--P
        false,--Q
        {
            [01]={'+0+0','-1+0','+1+0','-1+1','+0-2','+0-3'},
            [10]={'+0+0','+1+0','+1-1','-1+0','+0+2','+0+3'},
            [03]={'+0+0','+1+0','+1-1','+0+1','+0-2','+0-3'},
            [30]={'+0+0','-1+1','+1+0','+0-1','+0+2','+0+3'},
            [12]={'+0+0','+1+0','+0-1','-1+0','+0+2'},
            [21]={'+0+0','-1+0','+0+1','+1+0','+0-2'},
            [32]={'+0+0','-1+0','+0+1','-1+1','+1+0','+0+2','-2+0'},
            [23]={'+0+0','+1+0','+1-1','+0-1','-1+0','+0-2','+2+0'},
            [02]={'+0+0','+1+0','-1+0','-1-1'},
            [20]={'+0+0','-1+0','+1+0','+1+1'},
            [13]={'+0+0','+0-1','-1+1','+0+1'},
            [31]={'+0+0','+0-1','+1-1','+0+1'},
        },--F
        false,--E
        {
            [01]={'+0+0','+0-1','-1-1','+1+0','+1+1','+0-3','-1+0','+0+2','-1+2'},
            [10]={'+0+0','+1+0','+0-1','-1-1','+0-2','-1+1','+0-3','+1-2','+0+1'},
            [03]={'+0+0','+0-1','+1-1','-1+0','-1+1','+0-3','+1+0','+0+2','+1+2'},
            [30]={'+0+0','-1+0','+0-1','+1-1','+0-2','+1+1','+0-3','-1-2','+0+1'},
            [12]={'+0+0','+1+0','-1+0','+0-2','+0-3','+0+1','-1+1'},
            [21]={'+0+0','+1-1','-1+0','+1+0','+0-1','+0+2','+0+3'},
            [32]={'+0+0','-1+0','+1+0','+0-2','+0-3','+0+1','+1+1'},
            [23]={'+0+0','-1-1','+1+0','-1+0','+0-1','+0+2','+0+3'},
            [02]={'+0+0','+0-1','+0+1','+0+2'},
            [20]={'+0+0','+0-1','+0+1','+0-2'},
            [13]={'+0+0','+1+0','-1+1','-2+0'},
            [31]={'+0+0','-1+0','+1+1','+2+0'},
        },--T5
        {
            [01]={'+0+0','-1+0','-1+1','+0-2','-1-2'},
            [10]={'+0+0','+1+0','+1-1','+0+2','+1+2'},
            [03]={'+0+0','+1+0','+1+1','+0-2','+1-2'},
            [30]={'+0+0','-1+0','-1-1','+0-2','-1+2'},
            [12]={'+0+0','+1+0','+1-1','+1+1'},
            [21]={'+0+0','-1-1','-1+1','-1-1'},
            [32]={'+0+0','-1+0','-1-1','-1+1'},
            [23]={'+0+0','+1-1','+1+1','+1-1'},
            [02]={'+0+0','+0+1'},
            [20]={'+0+0','+0-1'},
            [13]={'+0+0','+0-1','+0+1','+1+0'},
            [31]={'+0+0','+0-1','+0+1','-1+0'},
        },--U
        {
            [01]={'+0+0','+0+1','-1+0','+0-2','-1-2'},
            [10]={'+0+0','+0+1','+1+0','+0-2','+1-2'},
            [03]={'+0+0','+0-1','+0+1','+0+2'},
            [30]={'+0+0','+0-1','+0+1','+0-2'},
            [12]={'+0+0','+0-1','+0+1','+0+2'},
            [21]={'+0+0','+0-1','+0-2','+0-2'},
            [32]={'+0+0','+1+0','-1+0'},
            [23]={'+0+0','-1+0','+1+0'},
            [02]={'+0+0','-1+1','+1-1'},
            [20]={'+0+0','+1-1','-1+1'},
            [13]={'+0+0','+1+1','-1-1'},
            [31]={'+0+0','-1-1','+1+1'},
        },--V
        {
            [01]={'+0+0','+0-1','-1+0','+1+0','+1-1','+0+2'},
            [10]={'+0+0','+0-1','-1-1','+0+1','+0-2','+1-2','+0+2'},
            [03]={'+0+0','+1+0','+1+1','+0-1','+0-2','+0-3','+1-1','+0+1','+0+2','+0+3'},
            [30]={'+0+0','-1+0','-1+1','+0-1','+0-2','+0-3','-1-1','+0+1','+0+2','+0+3'},
            [12]={'+0+0','+1+0','+0-1','-2+0','+1+1','-1+0','+0+1','-1-1'},
            [21]={'+0+0','-1+0','+0-1','+2+0','-1+1','+1+0','+0+1','+1-1'},
            [32]={'+0+0','+0-1','+1+0','+0+1','-1+0','-1-1','+0+2'},
            [23]={'+0+0','+0-1','+1-1','+0+1','+0-2','-1-2','+0+2'},
            [02]={'+0+0','+0-1','-1+0'},
            [20]={'+0+0','+0+1','+1+0'},
            [13]={'+0+0','+0+1','-1+0'},
            [31]={'+0+0','+0-1','+1+0'},
        },--W
        function(P,d)
            if P.type=='human'then
                SFX.play('rotate',nil,P:getCenterX()*.15)
            end
            local kickData=XspinList[d]
            for test=1,#kickData do
                local x,y=P.curX+kickData[test][1],P.curY+kickData[test][2]
                if not P:ifoverlap(P.cur.bk,x,y)then
                    P.curX,P.curY=x,y
                    P.spinLast=1
                    P:freshBlock('move')
                    P.stat.rotate=P.stat.rotate+1
                    return
                end
            end
            P:freshBlock('fresh')
        end,--X
        {
            [01]={'+0+0','-1+0','-1+1','+0-3','-1+1','-1+2','+0+1'},
            [10]={'+0+0','-1+0','+1-1','+0+3','+1-1','+1-2','+0+1'},
            [03]={'+0+0','+0-1','+1-1','-1+0','+1+1','+0-2','+1-2','+0-3','+1-3','-1+1'},
            [30]={'+0+0','+0+1','-1+1','+1+0','-1-1','+0+2','-1+2','+0+3','-1+3','+1-1'},
            [12]={'+0+0','+1+0','+1-1','+0-1','+1-2','+0-2','+1+1','-1+0','+0+2','+1+2'},
            [21]={'+0+0','-1+0','-1+1','+0+1','-1+2','+0+2','-1-1','+1+0','+0-2','-1-2'},
            [32]={'+0+0','-1+0','-1+1','-1-1','+1+0','+0+2','-1+2','+0-2'},
            [23]={'+0+0','+1+0','+1-1','+1+1','-1+0','+0-2','+1-2','+0+2'},
            [02]={'+0+0','+0-1','-1-1','+1-1','-1+0','+2-1'},
            [20]={'+0+0','+0+1','+1+1','-1+1','+1+0','-2+1'},
            [13]={'+0+0','-1+0','-1-1','+0+1','-1-2'},
            [31]={'+0+0','+1+0','+1+1','+0-1','+1+2'},
        },--J5
        false,--L5
        {
            [01]={'+0+0','-1+0','-1+1','+1+0','-1+2','-1-1','+0-3','+0+1'},
            [10]={'+0+0','-1+0','+1+0','+1-1','+1-2','+1+1','+0+3','+0+1'},
            [03]={'+0+0','+0-1','+1+0','+0+1','+1-1','-1+0','+1+1','+0-2','+1-2','+0-3','+1-3','-1+1'},
            [30]={'+0+0','+0-1','-1+0','+0+1','-1+1','+1+0','-1-1','+0+2','-1+2','+0+3','-1+3','+1-1'},
            [12]={'+0+0','+1+0','+1-1','+0-1','+1-2','+0-2','+1+1','-1+0','+0+2','+1+2'},
            [21]={'+0+0','-1+0','-1+1','+0+1','-1+2','+0+2','-1-1','+1+0','+0-2','-1-2'},
            [32]={'+0+0','+0-1','-1+0','-1+1','-1-1','+1+0','+0+2','-1+2','+0-2'},
            [23]={'+0+0','+0+1','+1+0','+1-1','+1+1','-1+0','+0-2','+1-2','+0+2'},
            [02]={'+0+0','+0-1','+1-1','-1+0','+2-1','+0+1'},
            [20]={'+0+0','+0+1','-1+1','+1+0','-2+1','+0-1'},
            [13]={'+0+0','-1+0','-1-1','+0+1','-1-2'},
            [31]={'+0+0','+1+0','+1+1','+0-1','+1+2'},
        },--R
        false,--Y
        {
            [01]={'+0+0','-1+0','-1+1','+0+1','+1+0','+1+1','-1+2','-2+0','+0-2'},
            [10]={'+0+0','+1+0','-1+0','+0-1','-1-1','+1-1','+1-2','+2+0','+0+2'},
            [03]={'+0+0','-1+0','+1-1','+0-2','+0-3','+1+0','+1-2','+1-3','+0+1','-1+1'},
            [30]={'+0+0','-1+0','+1-1','+1-2','+1+0','+0-2','+1-3','-1+2','+0+3','-1+3'},
            [12]={'+0+0','-1+0','+1-1','-1-1','+1-2','+1+0','+0-2','+1-3','-1+2','+0+3','-1+3'},
            [21]={'+0+0','-1+0','+1-1','+1+1','+0-2','+0-3','+1+0','+1-2','+1-3','+0+1','-1+1'},
            [32]={'+0+0','-1+0','+0-1','-1-2','+1-1','+1+0','+1+1','+0+2','+0+3'},
            [23]={'+0+0','+0-2','+0-3','+1+2','+1+0','+0+1','-1+1','+0-1','+0+2'},
            [02]={'+0+0','-1+0','+0+2','+0-1'},
            [20]={'+0+0','+1+0','+0-2','+0+1'},
            [13]={'+0+0','-1+0','-1-1','+0+1','+1+2'},
            [31]={'+0+0','+1+0','+1+1','+0-1','-1-2'},
        },--N
        false,--H
        {
            [01]={'+0+0','+1-1','+1+0','+1+1','+0+1','-1+1','-1+0','-1-1','+0-1','+0-2','-2-1','-2-2','+2+0','+2-1','+2-2','+1+2','+2+2','-1+2','-2+2'},
            [10]={'+0+0','-1+0','-1-1','+0-1','+1-1','-2-2','-2-1','-2+0','-1-2','+0-2','+1-2','+2-2','-1+1','-2+1','-2+2','+1+0','+2+0','+2-1','+0+1','+1-1','+2-2'},
            [03]={'+0+0','-1-1','-1+0','-1+1','-0+1','+1+1','+1+0','+1-1','-0-1','-0-2','+2-1','+2-2','-2+0','-2-1','-2-2','-1+2','-2+2','+1+2','+2+2'},
            [30]={'+0+0','+1+0','+1-1','-0-1','-1-1','+2-2','+2-1','+2+0','+1-2','-0-2','-1-2','-2-2','+1+1','+2+1','+2+2','-1+0','-2+0','-2-1','+0+1','-1-1','-2-2'},
        },--I5
        {
            [01]={'+0+0','-1+0','-1-1','+1+1','-1+1'},
            [10]={'+0+0','-1+0','+1+0','-1-1','+1+1'},
            [03]={'+0+0','+1+0','+1-1','-1+1','+1+1'},
            [30]={'+0+0','+1+0','-1+0','+1-1','-1+1'},
        },--I3
        {
            [01]={'+0+0','-1+0','+1+0'},
            [10]={'+0+0','+1+0','-1+0'},
            [03]={'+0+0','+0+1','+0-1'},
            [30]={'+0+0','+0-1','+0+1'},
            [12]={'+0+0','+0+1','+0-1'},
            [21]={'+0+0','+0-1','+0+1'},
            [32]={'+0+0','-1+0','+1+0'},
            [23]={'+0+0','+1+0','-1+0'},
            [02]={'+0+0','+0-1','+1-1','-1-1'},
            [20]={'+0+0','+0+1','-1+1','+1+1'},
            [13]={'+0+0','+0-1','-1-1','+1-1'},
            [31]={'+0+0','+0+1','+1+1','-1+1'},
        },--C
        {
            [01]={'+0+0','-1+0','+0+1'},
            [10]={'+0+0','+1+0','+0+1'},
            [03]={'+0+0','+1+0','+0+1'},
            [30]={'+0+0','-1+0','+0+1'},
            [12]={'+0+0','+1+0','+0+2'},
            [21]={'+0+0','+0-1','-1+0'},
            [32]={'+0+0','-1+0','+0+2'},
            [23]={'+0+0','+0-1','-1+0'},
            [02]={'+0+0','+0-1','+0+1'},
            [20]={'+0+0','+0+1','+0-1'},
            [13]={'+0+0','-1+0','+1+0'},
            [31]={'+0+0','+1+0','-1+0'},
        },--I2
        nil,--O1
    }
}
TRS.centerDisp[6]=false
TRS.centerDisp[18]=false
TRS.kickTable[2]= RotationSys._reflect(TRS.kickTable[1])--SZ
TRS.kickTable[4]= RotationSys._reflect(TRS.kickTable[3])--LJ
TRS.kickTable[9]= RotationSys._reflect(TRS.kickTable[8])--S5Z5
TRS.kickTable[11]=RotationSys._reflect(TRS.kickTable[10])--PQ
TRS.kickTable[13]=RotationSys._reflect(TRS.kickTable[12])--FE
TRS.kickTable[20]=RotationSys._reflect(TRS.kickTable[19])--L5J5
TRS.kickTable[22]=RotationSys._reflect(TRS.kickTable[21])--RY
TRS.kickTable[24]=RotationSys._reflect(TRS.kickTable[23])--NH
RotationSys._centroSymSet(TRS.kickTable[8])RotationSys._centroSymSet(TRS.kickTable[9])--S5Z5
RotationSys._centroSymSet(TRS.kickTable[25])RotationSys._centroSymSet(TRS.kickTable[26])--I5I3
return TRS
