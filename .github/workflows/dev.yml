name: Techmino Galaxy Develop CI

on:
  push:
    branches: [main, ci*]
  pull_request:
    branches: [main]
env:
  CORE_LOVE_PACKAGE_PATH: ./core.love
  CORE_LOVE_ARTIFACT_NAME: core_love_package
jobs:
  get-info:
    runs-on: ubuntu-latest
    outputs:
      app-name: ${{ steps.app-info.outputs.app-name }}
      version-name: ${{ steps.app-info.outputs.version-name }}
      version-string: ${{ steps.app-info.outputs.version-string }}
      version-code: ${{ steps.app-info.outputs.version-code }}
      commit-hash: ${{ steps.git-info.outputs.commit-hash }}
      base-name: ${{ steps.assemble-base-name.outputs.base-name }}
    steps:
      - uses: actions/checkout@v3
      - name: Install lua
        run: |
          sudo apt-get install lua5.3 -y
      - name: Get app info
        id: app-info
        shell: lua {0}
        run: |
          local version = require "version"
          print("::set-output name=app-name::"..version.appName)
          print("::set-output name=version-name::"..version.appVer)
          print("::set-output name=version-string::"..version.verStr)
          print(("::set-output name=version-code::%d"):format(version.apkCode))
      - name: Get git info
        id: git-info
        shell: bash
        run: |
          COMMIT_HASH=$(git rev-parse --short ${{ GITHUB.SHA }})
          echo ::set-output name=commit-hash::$COMMIT_HASH
      - name: Assemble package base name
        id: assemble-base-name
        shell: bash
        run: |
          BASE_NAME=Techmino_Galaxy_${{ steps.app-info.outputs.version-string }}_${{ steps.git-info.outputs.commit-hash }}_#${{ GITHUB.RUN_NUMBER }}
          echo ::set-output name=base-name::$BASE_NAME
  build-core:
    runs-on: ubuntu-latest
    needs: get-info
    env:
      PACKAGE_NAME: ./${{ needs.get-info.outputs.base-name }}_Core.love
    outputs:
      download-url: ${{ steps.transfer.outputs.download-url }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build core love package
        uses: 26F-Studio/love-actions-core@v1.0.4
        with:
          build-list: ./assets/ ./Zenitha/ ./conf.lua ./main.lua ./version.lua
          package-path: ${{ env.CORE_LOVE_PACKAGE_PATH }}
      - name: Upload core love package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
          path: ${{ env.CORE_LOVE_PACKAGE_PATH }}
      - name: Rename love package
        run: mv ${{ env.CORE_LOVE_PACKAGE_PATH }} ${{ env.PACKAGE_NAME }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.get-info.outputs.base-name }}_Core
          path: ${{ env.PACKAGE_NAME }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -sL https://git.io/file-transfer | sh 
          ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"
      - name: Display download link
        shell: bash
        run: |
          echo "::notice::Download link: ${{ steps.transfer.outputs.download-url }}"
  auto-test:
    runs-on: ubuntu-latest
    needs: build-core
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Love actions for testing
        uses: 26F-Studio/love-actions-test@v1.0.1
        with:
          font-path: ./assets/fonts/proportional.otf
          language-folder: ./assets/language
  build-android:
    runs-on: ubuntu-latest
    needs: [get-info, build-core]
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Process app name
        id: process-app-name
        shell: python3 {0}
        run: |
          import os
          import re
          os.system("echo ::set-output name=bundle-id::org.f26_studio." + re.sub(r"[^A-Za-z0-9]+", "_", "${{ needs.get-info.outputs.app-name }}"))
          os.system("echo ::set-output name=product-name::" + re.sub(r"[^A-Za-z0-9]+", "-", "${{ needs.get-info.outputs.app-name }}"))
      - name: Download core love package
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
      - name: Build Android packages
        id: build-packages
        uses: 26F-Studio/love-actions-android@v1.0.9
        with:
          app-name: ${{ needs.get-info.outputs.app-name }}
          bundle-id: ${{ steps.process-app-name.outputs.bundle-id }}
          keystore-alias: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          keystore-base64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          keystore-key-password: ${{ secrets.ANDROID_KEYSTORE_KEYPASSWORD }}
          keystore-store-password: ${{ secrets.ANDROID_KEYSTORE_STOREPASSWORD }}
          love-package: ${{ env.CORE_LOVE_PACKAGE_PATH }}
          product-name: ${{ steps.process-app-name.outputs.product-name }}
          resource-path: ./.github/build/android/dev/res
          version-string: ${{ needs.get-info.outputs.version-string }}
          version-code: ${{ needs.get-info.outputs.version-code }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.get-info.outputs.base-name }}_Android
          path: ${{ env.OUTPUT_FOLDER }}/*
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -sL https://git.io/file-transfer | sh 
          ./transfer wet -s -p 16 --no-progress ${{ steps.build-packages.outputs.package-paths }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"
      - name: Display download link
        shell: bash
        run: |
          echo "::notice::Download link: ${{ steps.transfer.outputs.download-url }}"
  build-linux:
    runs-on: ubuntu-latest
    needs: [get-info, build-core]
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Process app name
        id: process-app-name
        shell: python3 {0}
        run: |
          import os
          import re
          os.system("echo ::set-output name=product-name::" + re.sub(r"[^A-Za-z0-9]+", "_", "${{ needs.get-info.outputs.app-name }}"))
      - name: Download core love package
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
      - name: Build Linux packages
        id: build-packages
        uses: 26F-Studio/love-actions-linux@v1.0.0
        with:
          desktop-file-path: ./.github/build/linux/dev/template.desktop
          executable-name: app
          icon-path: ./.github/build/linux/dev/icon.png
          love-package: ${{ env.CORE_LOVE_PACKAGE_PATH }}
          product-name: ${{ steps.process-app-name.outputs.product-name }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.get-info.outputs.base-name }}_Linux
          path: ${{ env.OUTPUT_FOLDER }}/*
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -sL https://git.io/file-transfer | sh 
          ./transfer wet -s -p 16 --no-progress ${{ steps.build-packages.outputs.package-paths }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"
      - name: Display download link
        shell: bash
        run: |
          echo "::notice::Download link: ${{ steps.transfer.outputs.download-url }}"
  build-macos:
    runs-on: macos-latest
    needs: [get-info, build-core]
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Process app name
        id: process-app-name
        shell: python3 {0}
        run: |
          import os
          import re
          os.system("echo ::set-output name=bundle-id::org.26f-studio." + re.sub(r"[^A-Za-z0-9]+", "-", "${{ needs.get-info.outputs.app-name }}"))
          os.system("echo ::set-output name=product-name::" + re.sub(r"[^A-Za-z0-9]+", "_", "${{ needs.get-info.outputs.app-name }}"))
      - name: Download core love package
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
      - name: Build macOS packages
        id: build-packages
        uses: 26F-Studio/love-actions-macos@v0.0.3-alpha
        with:
          app-name: ${{ needs.get-info.outputs.app-name }}
          bundle-id: ${{ steps.process-app-name.outputs.bundle-id }}
          copyright: "Copyright Â© 2019-2022 26F-Studio. Some Rights Reserved."
          icon-path: ./.github/build/macOS/dev/icon.icns
          love-package: ${{ env.CORE_LOVE_PACKAGE_PATH }}
          product-name: ${{ steps.process-app-name.outputs.product-name }}
          version-string: ${{ needs.get-info.outputs.version-string }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
          account-username: ${{ secrets.APPLE_ACCOUNT_USERNAME }}
          account-password: ${{ secrets.APPLE_ACCOUNT_PASSWORD }}
          certificate-base64: ${{ secrets.APPLE_CERT_DEVELOPER_ID_APPLICATION }}
          certificate-password: ${{ secrets.APPLE_CERT_DEVELOPER_ID_APPLICATION_PWD }}
          certificate-type: "Developer ID Application"
          team-id: "${{ secrets.APPLE_DEVELOPER_TEAM_ID }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.get-info.outputs.base-name }}_macOS
          path: ${{ env.OUTPUT_FOLDER }}/*
      - name: Upload to WeTransfer
        id: transfer
        run: |
          wget -qO- https://github.com/Mikubill/transfer/releases/download/v0.4.17/transfer_0.4.17_darwin_amd64.tar.gz | tar xvz
          ./transfer wet -s -p 16 --no-progress ${{ steps.build-packages.outputs.package-paths }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"
      - name: Display download link
        shell: bash
        run: |
          echo "::notice::Download link: ${{ steps.transfer.outputs.download-url }}"
  build-windows:
    runs-on: windows-latest
    needs: [get-info, build-core]
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Process app name
        id: process-app-name
        shell: python3 {0}
        run: |
          import os
          import re
          os.system("echo ::set-output name=product-name::" + re.sub(r"[^A-Za-z0-9]+", "_", "${{ needs.get-info.outputs.app-name }}"))
      - name: Download core love package
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
      - name: Build Windows packages
        id: build-packages
        uses: 26F-Studio/love-actions-windows@v0.0.2-alpha
        with:
          icon-path: ./.github/build/windows/dev/icon.ico
          rc-path: ./.github/build/windows/dev/template.rc
          love-package: ${{ env.CORE_LOVE_PACKAGE_PATH }}
          product-name: ${{ steps.process-app-name.outputs.product-name }}
          version-string: ${{ needs.get-info.outputs.version-string }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.get-info.outputs.base-name }}_Windows
          path: ${{ env.OUTPUT_FOLDER }}/*
      - name: Get transfer
        env:
          TEMP_PATH: ./temp.zip
        shell: bash
        run: |
          curl -L --retry 5 https://github.com/Mikubill/transfer/releases/download/v0.4.17/transfer_0.4.17_windows_amd64.zip -o ${{ env.TEMP_PATH }}
          7z x ${{ env.TEMP_PATH }} -o./
          rm ${{ env.TEMP_PATH }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          ./transfer wet -s -p 16 --no-progress ${{ steps.build-packages.outputs.package-paths }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"
      - name: Display download link
        shell: bash
        run: |
          echo "::notice::Download link: ${{ steps.transfer.outputs.download-url }}"
  post-build:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      [
        auto-test,
        build-core,
        build-android,
        build-linux,
        build-macos,
        build-windows,
      ]
    steps:
      - name: Initialize CI
        uses: actions/checkout@v3
      - name: Cleanup
        uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
