name: Techmino Galaxy Develop CI

on:
  push:
    branches: [main, ci*]
  pull_request:
    branches: [main]

jobs:
  get-info:
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.actual-get-info.outputs.name }}
      apkCode: ${{ steps.actual-get-info.outputs.apkCode }}
      code: ${{ steps.actual-get-info.outputs.code }}
      commit: ${{ steps.actual-get-info.outputs.commit }}
    steps:
      - uses: actions/checkout@v2
      - name: Install lua
        run: |
          sudo apt-get install lua5.3 -y
      - name: Get Version
        id: actual-get-info
        run: |
          echo "::set-output name=name::$(lua ./.github/workflows/getVersion.lua -name)"
          echo "::set-output name=apkCode::$(lua ./.github/workflows/getVersion.lua -apkCode)"
          echo "::set-output name=code::$(lua ./.github/workflows/getVersion.lua -code)"
          echo "::set-output name=commit::$(git rev-parse --short ${{ GITHUB.SHA }})"

  automatic-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: ./.github/actions/automatic-test

  build-windows:
    runs-on: windows-latest
    needs: get-info
    env:
      PACKAGE_NAME: ./Techmino_Galaxy_${{ needs.get-info.outputs.name }}_${{ needs.get-info.outputs.commit }}_#${{ GITHUB.RUN_NUMBER }}_Windows.zip
    outputs:
      download_url: ${{ steps.transfer.outputs.download_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: ./.github/actions/build-windows
        with:
          output: ${{ env.PACKAGE_NAME }}
          version: ${{ needs.get-info.outputs.name }}
          icon: ./.github/build/Windows/icon_snapshot.ico
      - name: Upload as artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.PACKAGE_NAME }}
      - name: Get transfer
        uses: ./.github/actions/get-unzip
        with:
          url: https://github.com/Mikubill/transfer/releases/download/v0.4.17/transfer_0.4.17_windows_amd64.zip
      - name: Upload to WeTransfer
        id: transfer
        run: |
          ./transfer.exe wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1 | tee ./wetransfer.log
          echo "::set-output name=download_url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  build-linux:
    runs-on: ubuntu-latest
    needs: get-info
    env:
      PACKAGE_NAME: ./Techmino_Galaxy_${{ needs.get-info.outputs.name }}_${{ needs.get-info.outputs.commit }}_#${{ GITHUB.RUN_NUMBER }}_Linux.AppImage
    outputs:
      download_url: ${{ steps.transfer.outputs.download_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: ./.github/actions/build-linux
        with:
          output: ${{ env.PACKAGE_NAME }}
          icon: ./.github/build/Linux/icon_snapshot.png
      - name: Upload as artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.PACKAGE_NAME }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1 | tee ./wetransfer.log
          echo "::set-output name=download_url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  build-android:
    runs-on: ubuntu-latest
    needs: get-info
    env:
      PACKAGE_NAME: ./Techmino_Galaxy_${{ needs.get-info.outputs.name }}_${{ needs.get-info.outputs.commit }}_#${{ GITHUB.RUN_NUMBER }}_Android.apk
    outputs:
      download_url: ${{ steps.transfer.outputs.download_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: ./.github/actions/build-android
        with:
          type: snapshot
          apkCode: ${{ needs.get-info.outputs.apkCode }}
          name: ${{ needs.get-info.outputs.name }}
          output: ${{ env.PACKAGE_NAME }}

          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_KEYPASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEYPASSWORD }}
          ANDROID_KEYSTORE_STOREPASSWORD: ${{ secrets.ANDROID_KEYSTORE_STOREPASSWORD }}
      - name: Upload as artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.PACKAGE_NAME }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1 | tee ./wetransfer.log
          echo "::set-output name=download_url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  # build-macOS:
  #   runs-on: macos-latest
  #   needs: get-info
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: 'recursive'
  #   - uses: ./.github/actions/update-version
  #     with:
  #       commit: ${{ needs.get-info.outputs.commit }}
  #       type: snapshot
  #   - uses: ./.github/actions/build-macos
  #     with:
  #       name: ${{ needs.get-info.outputs.name }}
  #       icon: .github/build/macOS/icon_snapshot.icns
  #       APPLE_API_ID: '${{ secrets.APPLE_API_ID }}'
  #       APPLE_API_ISSUER: '${{ secrets.APPLE_API_ISSUER }}'
  #       APPLE_API_KEY: '${{ secrets.APPLE_API_KEY }}'
  #       APPLE_APP_IDENTIFIER: '${{ secrets.APPLE_APP_IDENTIFIER }}'
  #       APPLE_KEYCHAIN_NAME: '${{ secrets.APPLE_KEYCHAIN_NAME }}'
  #       APPLE_KEYCHAIN_PWD: '${{ secrets.APPLE_KEYCHAIN_PWD }}'
  #       FASTLANE_MATCH_PWD: '${{ secrets.FASTLANE_MATCH_PWD }}'
  #       FASTLANE_MATCH_TOKEN: '${{ secrets.FASTLANE_MATCH_TOKEN }}'
  #   - name: Upload
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: Techmino_${{ needs.get-info.outputs.name }}_${{ needs.get-info.outputs.commit }}_#${{ GITHUB.RUN_NUMBER }}_macOS
  #       path: Techmino.dmg

  # build-iOS:
  #   runs-on: macos-latest
  #   if: (!startsWith( github.ref , 'refs/heads/ci-')) || startsWith( github.ref , 'refs/heads/ci-ios-')
  #   needs: get-info
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: 'recursive'
  #   - uses: ./.github/actions/update-version
  #     with:
  #       commit: ${{ needs.get-info.outputs.commit }}
  #       type: snapshot
  #   - uses: ./.github/actions/build-ios
  #     with:
  #       name: ${{ needs.get-info.outputs.name }}
  #       type: 'dev'
  #       APPLE_API_ID: '${{ secrets.APPLE_API_ID }}'
  #       APPLE_API_ISSUER: '${{ secrets.APPLE_API_ISSUER }}'
  #       APPLE_API_KEY: '${{ secrets.APPLE_API_KEY }}'
  #       APPLE_APP_BUILD: '${{ needs.get-info.outputs.code }}.2.${{ github.run_number }}.${{ github.run_attempt }}'
  #       APPLE_APP_CHANGELOG: '${{ github.event.commits[0].message }}'
  #       APPLE_APP_ID: '${{ secrets.APPLE_APP_ID }}'
  #       APPLE_APP_IDENTIFIER: '${{ secrets.APPLE_APP_IDENTIFIER }}'
  #       APPLE_APP_PROFILE: '${{ secrets.APPLE_APP_PROFILE }}'
  #       APPLE_KEYCHAIN_NAME: '${{ secrets.APPLE_KEYCHAIN_NAME }}'
  #       APPLE_KEYCHAIN_PWD: '${{ secrets.APPLE_KEYCHAIN_PWD }}'
  #       FASTLANE_ACTION_ID: '${{ github.run_id }}'
  #       FASTLANE_DISCORD_WEBHOOK: '${{ secrets.FASTLANE_DISCORD_WEBHOOK }}'
  #       FASTLANE_MATCH_PWD: '${{ secrets.FASTLANE_MATCH_PWD }}'
  #       FASTLANE_MATCH_TOKEN: '${{ secrets.FASTLANE_MATCH_TOKEN }}'
  #   - name: Upload
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: Techmino_${{ needs.get-info.outputs.name }}_${{ needs.get-info.outputs.commit }}_#${{ GITHUB.RUN_NUMBER }}_iOS
  #       path: Techmino.ipa

  build-love:
    runs-on: ubuntu-latest
    needs: get-info
    env:
      PACKAGE_NAME: ./Techmino_Galaxy_${{ needs.get-info.outputs.name }}_${{ needs.get-info.outputs.commit }}_#${{ GITHUB.RUN_NUMBER }}_Bare.love
    outputs:
      download_url: ${{ steps.transfer.outputs.download_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: ./.github/actions/build-love
        with:
          output: ${{ env.PACKAGE_NAME }}
      - name: Upload as artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.PACKAGE_NAME }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1 | tee ./wetransfer.log
          echo "::set-output name=download_url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  discord-report:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      [get-info, automatic-test, build-windows, build-linux, build-android, build-love]
    steps:
      - name: Discord Message
        uses: Sniddl/discord-commits@v1.3
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: "Github action's result report from **${{ github.action_repository }}**."
          embed: '{"title":"CI #${{ GITHUB.RUN_NUMBER }} Result [Develop]","description":"Here is the result of the CI triggered by commit `${{ needs.get-info.outputs.commit }}`","url":"https://github.com/${{ github.action_repository }}/actions/runs/${{ github.run_id }}","color":36863,"fields":[{"name":"Version","value":"${{ needs.get-info.outputs.name }}"},{"name":"Changelog","value":"${{ github.event.commits[0].message }}"},{"name":"Status","value":"**Automatic Test:** ${{ needs.automatic-test.result }}\n**Windows:** ${{ needs.build-windows.result }}\n**Linux:** ${{ needs.build-linux.result }}\n**Android:** ${{ needs.build-android.result }}\n**Bare:** ${{ needs.build-love.result }}"},{"name":"Download Links","value":"**Windows:** ${{ needs.build-windows.outputs.download_url }}\n**Linux:** ${{ needs.build-linux.outputs.download_url }}\n**Android:** ${{ needs.build-android.outputs.download_url }}\n**Bare:** ${{ needs.build-love.outputs.download_url}}"}],"author":{"name":"Techmino Galaxy","url":"https://github.com/${{ github.action_repository }}"}}'
